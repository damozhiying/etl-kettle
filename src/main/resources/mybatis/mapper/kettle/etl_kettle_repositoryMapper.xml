<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.khsh.etl.mapper.EtlKettleRepositoryDao">

	<sql id="SqlWhere">
		<where>
			1=1
            <if test="id!=null ">and id=#{id} </if>
            <if test="uuid!=null and uuid!='' ">and uuid=#{uuid} </if>
            <if test="databaseUuid!=null and databaseUuid!='' ">and database_uuid=#{databaseUuid} </if>
            <if test="ktlJobName!=null and ktlJobName!='' ">and ktl_job_name like CONCAT('%', #{ktlJobName}, '%') </if>
            <if test="ktlJobType!=null and ktlJobType!='' ">and ktl_job_type=#{ktlJobType} </if>
            <if test="repType!=null and repType!='' ">and rep_type=#{repType} </if>
            <if test="repPath!=null and repPath!='' ">and rep_path like CONCAT('%', #{repPath}, '%') </if>
            <if test="repDirectory!=null and repDirectory!='' ">and rep_directory=#{repDirectory} </if>
            <if test="repFilename!=null and repFilename!='' ">and rep_filename=#{repFilename} </if>
            <if test="repId!=null ">and rep_id=#{repId} </if>
            <if test="repIdDirectory!=null ">and rep_id_directory=#{repIdDirectory} </if>
            <if test="ktlParamValue!=null and ktlParamValue!='' ">and ktl_param_value=#{ktlParamValue} </if>
            <if test="status!=null ">and status=#{status} </if>
            <if test="remark!=null and remark!='' ">and remark=#{remark} </if>
            <if test="modifyTime!=null and modifyTime!='' ">and modify_time=#{modifyTime} </if>
            <if test="modifyUser!=null and modifyUser!='' ">and modify_user=#{modifyUser} </if>
            <if test="ext!=null and ext!='' ">and ext=#{ext} </if>
            <if test="ext1!=null and ext1!='' ">and ext1=#{ext1} </if>
            <if test="ext2!=null and ext2!='' ">and ext2=#{ext2} </if>

		</where>
	</sql>
	<sql id="SqlWherePK">
		<where>
			1=1
			<if test="id!=null ">and id=#{id} </if>
            <if test="uuid!=null and uuid!='' ">and uuid=#{uuid} </if>
		</where>
	</sql>
	<sql id="SqlSet">
		<set>
            <if test="id!=null "> id=#{id}, </if>
            <if test="uuid!=null and uuid!='' "> uuid=#{uuid}, </if>
            <if test="databaseUuid!=null and databaseUuid!='' "> database_uuid=#{databaseUuid}, </if>
            <if test="ktlJobName!=null and ktlJobName!='' "> ktl_job_name=#{ktlJobName}, </if>
            <if test="ktlJobType!=null and ktlJobType!='' "> ktl_job_type=#{ktlJobType}, </if>
            <if test="repType!=null and repType!='' "> rep_type=#{repType}, </if>
            <if test="repPath!=null and repPath!='' "> rep_path=#{repPath}, </if>
            <if test="repDirectory!=null and repDirectory!='' "> rep_directory=#{repDirectory}, </if>
            <if test="repFilename!=null and repFilename!='' "> rep_filename=#{repFilename}, </if>
            <if test="repId!=null "> rep_id=#{repId}, </if>
            <if test="repIdDirectory!=null "> rep_id_directory=#{repIdDirectory}, </if>
            <if test="ktlParamValue!=null and ktlParamValue!='' "> ktl_param_value=#{ktlParamValue}, </if>
            <if test="status!=null "> status=#{status}, </if>
            <if test="remark!=null and remark!='' "> remark=#{remark}, </if>
            <if test="modifyTime!=null and modifyTime!='' "> modify_time=#{modifyTime}, </if>
            <if test="modifyUser!=null and modifyUser!='' "> modify_user=#{modifyUser}, </if>
            <if test="ext!=null and ext!='' "> ext=#{ext}, </if>
            <if test="ext1!=null and ext1!='' "> ext1=#{ext1}, </if>
            <if test="ext2!=null and ext2!='' "> ext2=#{ext2}, </if>
		</set>
	</sql>


	<insert  id="insertAutoKey" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" useGeneratedKeys="true" keyProperty="id" >
		 INSERT INTO etl_kettle_repository (
 			uuid, database_uuid, ktl_job_name, ktl_job_type,
 			rep_type, rep_path, rep_directory, rep_filename, rep_id,
 			rep_id_directory, ktl_param_value, status, remark, modify_time,
 			modify_user, ext, ext1, ext2 ) 	 VALUES (
 			#{uuid}, #{databaseUuid}, #{ktlJobName}, #{ktlJobType},
 			#{repType}, #{repPath}, #{repDirectory}, #{repFilename}, #{repId},
 			#{repIdDirectory}, #{ktlParamValue}, #{status}, #{remark}, #{modifyTime},
 			#{modifyUser}, #{ext}, #{ext1}, #{ext2} )
	</insert>

	<insert  id="insertSingle" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" useGeneratedKeys="true" keyProperty="id" >
		 INSERT INTO etl_kettle_repository (
 			uuid, database_uuid, ktl_job_name, ktl_job_type,
 			rep_type, rep_path, rep_directory, rep_filename, rep_id,
 			rep_id_directory, ktl_param_value, status, remark, modify_time,
 			modify_user, ext, ext1, ext2,  id )
		 VALUES(
 			#{uuid}, #{databaseUuid}, #{ktlJobName}, #{ktlJobType},
 			#{repType}, #{repPath}, #{repDirectory}, #{repFilename}, #{repId},
 			#{repIdDirectory}, #{ktlParamValue}, #{status}, #{remark}, #{modifyTime},
 			#{modifyUser}, #{ext}, #{ext1}, #{ext2},  #{id} )
	</insert>

	<delete  id="delete" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" >
		 DELETE FROM etl_kettle_repository
		 <include refid="SqlWherePK"></include>
	</delete>

	<update  id="update" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" >
		 UPDATE etl_kettle_repository
		 <include refid="SqlSet"></include>
		 <include refid="SqlWherePK"></include>
	</update>

	<select  id="findByPK" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" resultType="com.khsh.etl.model.EtlKettleRepositoryModel" >
		 SELECT * FROM etl_kettle_repository
		 <include refid="SqlWherePK"></include>
		 <if test=" orderCond !=null ">  order by ${orderCond} </if>
	</select>

	<select  id="queryByCond" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" resultType="com.khsh.etl.model.EtlKettleRepositoryModel" >
		 SELECT * FROM etl_kettle_repository
		 <include refid="SqlWhere"></include>
		 <if test=" orderCond !=null ">  order by ${orderCond} </if>
	</select>

	<select  id="queryByPage" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" resultType="com.khsh.etl.model.EtlKettleRepositoryModel" >
		 SELECT * FROM etl_kettle_repository
		 <include refid="SqlWhere"></include>
		 <if test="extSQL!=null "> ${extSQL} </if>
	</select>
	<select  id="findMaxId" parameterType="com.khsh.etl.model.EtlKettleRepositoryModel" resultType="int" >
		 SELECT max(id) FROM etl_kettle_repository
		 <include refid="SqlWhere"></include>
	</select>

    <!--查询kettle任务数据-->
    <select  id="queryKettleJobParam" parameterType="com.khsh.etl.vo.bus.KettleJobParamVO" resultType="com.khsh.etl.vo.bus.KettleJobParamVO" >
        SELECT P.job_id, P.job_name, P.param_name, P.param_type, P.before_after,
        R.*
        FROM sys_job_param P, etl_kettle_repository R
        where P.param_value = R.uuid
        <if test="databaseUuid!=null and databaseUuid!='' "> AND R.database_uuid=#{databaseUuid} </if>
        <if test="jobId!=null and jobId!='' "> AND P.job_id=#{jobId} </if>
        <if test="jobName!=null and jobName!='' "> AND P.job_name=#{jobName}  </if>
        <if test="paramName!=null and paramName!='' "> AND P.param_name=#{paramName} </if>
        <if test="paramType!=null and paramType!='' "> ADN P.param_type=#{paramType}  </if>
        <if test=" extSQL !=null "> ${extSQL} </if>
        <!--<if test=" orderCond !=null ">  order by ${orderCond} </if>-->
        order by P.before_after asc
    </select>


    <!--查询当前资源，已经调度使用的资源 -->
    <select  id="queryJobUsed" parameterType="com.khsh.etl.vo.EtlKettleRepositoryVO" resultType="com.khsh.etl.vo.EtlKettleRepositoryVO" >
        select DISTINCT case when U.param_value is null then 'N' else 'Y' end as hasUsed,
        R.*
        from etl_kettle_repository R
        left join sys_job_param U on U.param_value=R.uuid
        WHERE R.status=1
        order by R.rep_id asc
    </select>




</mapper>

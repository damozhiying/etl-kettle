<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.khsh.etl.mapper.EtlDatabaseBuildDao">

	<sql id="SqlWhere">
		<where>
			1=1
			<if test="id!=null ">and id=#{id} </if>
			<if test="uuid!=null and uuid!='' ">and uuid=#{uuid} </if>
			<if test="name!=null and name!='' ">and name like CONCAT('%', #{name}, '%') </if>
			<if test="databaseUuidFrom!=null and databaseUuidFrom!='' ">and database_uuid_from=#{databaseUuidFrom} </if>
			<if test="databaseUuidTo!=null and databaseUuidTo!='' ">and database_uuid_to=#{databaseUuidTo} </if>
			<if test="tablePrefix!=null and tablePrefix!='' ">and table_prefix=#{tablePrefix} </if>
			<if test="isDrop!=null  ">and is_drop=#{isDrop} </if>
			<if test="status!=null ">and status=#{status} </if>
			<if test="remark!=null and remark!='' ">and remark=#{remark} </if>
			<if test="modifyTime!=null and modifyTime!='' ">and modify_time=#{modifyTime} </if>
			<if test="modifyUser!=null and modifyUser!='' ">and modify_user=#{modifyUser} </if>
			<if test="ext!=null and ext!='' ">and ext=#{ext} </if>
			<if test="ext1!=null and ext1!='' ">and ext1=#{ext1} </if>
			<if test="ext2!=null and ext2!='' ">and ext2=#{ext2} </if>
			<if test="ignoreTables!=null and ignoreTables!='' ">and ignore_tables=#{ignoreTables} </if>
		</where>
	</sql>
	<sql id="SqlWherePK">
		<where>
			1=1
			<if test="id!=null ">and id=#{id} </if>
            <if test="uuid!=null and uuid!='' ">and uuid=#{uuid} </if>
		</where>
	</sql>
	<sql id="SqlSet">
		<set>
			<if test="id!=null "> id=#{id}, </if>
			<if test="uuid!=null and uuid!='' "> uuid=#{uuid}, </if>
			<if test="name!=null and name!='' "> name=#{name}, </if>
			<if test="databaseUuidFrom!=null and databaseUuidFrom!='' "> database_uuid_from=#{databaseUuidFrom}, </if>
			<if test="databaseUuidTo!=null and databaseUuidTo!='' "> database_uuid_to=#{databaseUuidTo}, </if>
			<if test="tablePrefix!=null and tablePrefix!='' "> table_prefix=#{tablePrefix}, </if>
			<if test="isDrop!=null "> is_drop=#{isDrop}, </if>
			<if test="status!=null "> status=#{status}, </if>
			<if test="remark!=null and remark!='' "> remark=#{remark}, </if>
			<if test="modifyTime!=null and modifyTime!='' "> modify_time=#{modifyTime}, </if>
			<if test="modifyUser!=null and modifyUser!='' "> modify_user=#{modifyUser}, </if>
			<if test="ext!=null and ext!='' "> ext=#{ext}, </if>
			<if test="ext1!=null and ext1!='' "> ext1=#{ext1}, </if>
			<if test="ext2!=null and ext2!='' "> ext2=#{ext2}, </if>
			<if test="ignoreTables!=null and ignoreTables!='' "> ignore_tables=#{ignoreTables}, </if>
		</set>
	</sql>


	<insert  id="insertAutoKey" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" useGeneratedKeys="true" keyProperty="id" >
		 INSERT INTO etl_database_build (
 			uuid, name, database_uuid_from, database_uuid_to, 
 			table_prefix, is_drop, status, remark, modify_time, 
 			modify_user, ext, ext1, ext2, ignore_tables ) 
 				 VALUES ( 
 			#{uuid}, #{name}, #{databaseUuidFrom}, #{databaseUuidTo}, 
 			#{tablePrefix}, #{isDrop}, #{status}, #{remark}, #{modifyTime}, 
 			#{modifyUser}, #{ext}, #{ext1}, #{ext2}, #{ignoreTables} ) 
 			
	</insert>

	<insert  id="insertSingle" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" useGeneratedKeys="true" keyProperty="id" >
		 INSERT INTO etl_database_build (
 			uuid, name, database_uuid_from, database_uuid_to, 
 			table_prefix, is_drop, status, remark, modify_time, 
 			modify_user, ext, ext1, ext2, ignore_tables, 
 			 id ) 
		 VALUES( 
 			#{uuid}, #{name}, #{databaseUuidFrom}, #{databaseUuidTo}, 
 			#{tablePrefix}, #{isDrop}, #{status}, #{remark}, #{modifyTime}, 
 			#{modifyUser}, #{ext}, #{ext1}, #{ext2}, #{ignoreTables}, 
 			 #{id} ) 
	</insert>

	<delete  id="delete" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 DELETE FROM etl_database_build
		 <include refid="SqlWhere"></include> 
	</delete>

	<update  id="update" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 UPDATE etl_database_build
		 <include refid="SqlSet"></include> 
		 <include refid="SqlWherePK"></include> 
	</update>

	<select  id="findByPK" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" resultType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 SELECT * FROM etl_database_build
		 <include refid="SqlWherePK"></include>
		 <if test=" orderCond !=null ">  order by ${orderCond} </if> 
	</select>

	<select  id="queryByCond" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" resultType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 SELECT * FROM etl_database_build
		 <include refid="SqlWhere"></include> 
		 <if test=" orderCond !=null ">  order by ${orderCond} </if> 
	</select>

	<select  id="queryTree" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" resultType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 SELECT * FROM etl_database_build
		 <include refid="SqlWhere"></include> 
		 <if test=" extSQL !=null "> ${extSQL} </if> 
		 <if test=" orderCond !=null ">  order by ${orderCond} </if> 
	</select>

	<select  id="queryByPage" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" resultType="com.khsh.etl.model.EtlDatabaseBuildModel" >
		 SELECT * FROM etl_database_build
		 <include refid="SqlWhere"></include> 
		 <if test="extSQL!=null "> ${extSQL} </if> 
	</select>

	<select  id="findMaxId" parameterType="com.khsh.etl.model.EtlDatabaseBuildModel" resultType="int" >
		 SELECT max(id) FROM etl_database_build
		 <include refid="SqlWhere"></include> 
	</select>




</mapper>